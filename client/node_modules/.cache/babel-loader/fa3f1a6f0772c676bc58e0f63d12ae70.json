{"ast":null,"code":"import DataService from \"../../services/DataService\";\nimport BarChart from \"./BarChart.vue\";\nimport LineChart from \"./LineChart.vue\";\nexport default {\n  name: \"FuturoComponent\",\n  components: {\n    BarChart,\n    LineChart\n  },\n\n  data() {\n    return {\n      checkedInvestimentos: [],\n      tempoInvestimento: \"\",\n      investimentoInicial: \"\",\n      montante: {},\n      barChartData: {\n        labels: [],\n        datasets: [{\n          label: 'Montante',\n          backgroundColor: [],\n          data: []\n        }]\n      },\n      LineChartData: {\n        labels: [],\n        datasets: [{}]\n      },\n      // chartOptions:\n      notSubmitted: true,\n      loaded: false,\n      flagTabela: false,\n      flagLinha: false,\n      flagBarras: true,\n      isActiveBarra: \"\",\n      isActiveLinha: \"\",\n      isActiveTabela: \"\"\n    };\n  },\n\n  methods: {\n    registerInvestimento: function () {\n      this.barChartData.datasets[0].data = []; // Resetando os dados do gráfico de barras\n\n      this.barChartData.datasets[0].backgroundColor = []; // Resetando os dados das cores do gráfico de barras\n      //  this.lineChartData.datasets[0].data = []; Resetando os dados do gráfico de linhas\n      //  this.lineChartData.datasets[0].backgroundColor = [];  Resetando os dados das cores do gráfico de linhas\n\n      let backgorundColorSet = {\n        CDB: 'yellow',\n        LCI: 'red',\n        LCA: 'green',\n        TesouroIPCA: 'brown',\n        TesouroSelic: 'blue'\n      }; //Salvando os dados da simulação em um objeto\n\n      let dados = {\n        tempoInvestimento: this.tempoInvestimento,\n        investimentoInicial: this.investimentoInicial,\n        checkedInvestimentos: this.checkedInvestimentos\n      }; //Enviando os dados da simulação para o backend, processando a resposta e colocando nos dados do gráfico\n\n      DataService.createFuturo(dados).then(response => {\n        this.barChartData.labels = this.checkedInvestimentos; //this.chartData.datasets[0].label = this.checkedInvestimentos;\n\n        for (const key in response.data.Montantes) {\n          this.montante[key] = response.data.Montantes[key];\n          this.barChartData.datasets[0].data.push(response.data.Montantes[key]);\n          this.barChartData.datasets[0].backgroundColor.push(backgorundColorSet[key]);\n        }\n\n        let dataset = [{\n          label: '',\n          borderColor: '',\n          backgroundColor: \"\",\n          data: [0]\n        }];\n\n        for (let i = 0; i < response.data.Evolucao.length; i++) {\n          let j = 0;\n\n          if (i === 0) {\n            dataset.data.pop();\n            dataset.data.push(response.data.Evolucao[i]);\n          } else if (response.data.Evolucao[i] == this.investimentoInicial) {\n            dataset.label = this.checkedInvestimentos[j];\n            dataset.borderColor = backgorundColorSet[this.checkedInvestimentos[j]];\n            dataset.backgroundColor = backgorundColorSet[this.checkedInvestimentos[j]];\n            this.LineChartData.datasets.push(dataset);\n            dataset = [{\n              label: '',\n              borderColor: '',\n              backgroundColor: \"\",\n              data: []\n            }];\n          } else dataset.data.push(response.data.Evolucao[i]);\n\n          this.LineChartData.labels.push(i);\n        } // this.chartData.datasets[0].label = this.checkedInvestimentos;\n\n\n        this.clearForm();\n        this.showResultados();\n      }).catch(error => {\n        console.log(error.message);\n      });\n    },\n    showResultados: function () {\n      this.showBarra();\n      this.notSubmitted = false;\n      this.loaded = true;\n    },\n    clearForm: function () {\n      this.checkedInvestimentos = [];\n      this.tempoInvestimento = \"\";\n      this.investimentoInicial = \"\";\n    },\n    showBarra: function () {\n      this.flagBarras = true;\n      this.flagLinha = false;\n      this.flagTabela = false;\n      this.isActiveBarra = \"active\";\n      this.isActiveLinha = \"\";\n      this.isActiveTabela = \"\";\n    },\n    showTabela: function () {\n      this.flagBarras = false;\n      this.flagLinha = false;\n      this.flagTabela = true;\n      this.isActiveBarra = \"\";\n      this.isActiveLinha = \"\";\n      this.isActiveTabela = \"active\";\n    },\n    showLinha: function () {\n      this.flagBarras = false;\n      this.flagLinha = true;\n      this.flagTabela = false;\n      this.isActiveBarra = \"\";\n      this.isActiveLinha = \"active\";\n      this.isActiveTabela = \"\";\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["DataService","BarChart","LineChart","name","components","data","checkedInvestimentos","tempoInvestimento","investimentoInicial","montante","barChartData","labels","datasets","label","backgroundColor","LineChartData","notSubmitted","loaded","flagTabela","flagLinha","flagBarras","isActiveBarra","isActiveLinha","isActiveTabela","methods","registerInvestimento","backgorundColorSet","CDB","LCI","LCA","TesouroIPCA","TesouroSelic","dados","createFuturo","then","response","key","Montantes","push","dataset","borderColor","i","Evolucao","length","j","pop","clearForm","showResultados","catch","error","console","log","message","showBarra","showTabela","showLinha"],"sourceRoot":"","sources":["C:\\Users\\mathe\\Desktop\\Node-JS\\SimRendaFixa\\sim-renda-fixa-app\\src\\components\\FuturoComponent.vue"],"sourcesContent":["<template>\r\n<div class=\"futuro\">\r\n        <p>\r\n          Neste módulo, é possível simular um ou mais investimentos de renda fixa projetados para uma data futura a partir data presente.\r\n          Inicialmente, selecione os investimentos a serem simulados atráves das caixas de seleção.\r\n          Após isso, insira o prazo do investimento e o valor do investimento inicial.\r\n          Por fim, clique no botão \"Simular Futuro\" para realizar a simulação.\r\n        </p>\r\n      <div v-if=\"notSubmitted\" id=\"formulario\">\r\n        <form  @submit.prevent=\"registerInvestimento\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"investimentos\" class=\"form-label\"><strong>Selecione os investimentos a serem simulados:</strong></label>\r\n          </div>\r\n          <div class=\"mb-3 form-check form-check-inline\">\r\n            <input type=\"checkbox\" name=\"cdb\" id=\"cdb\" class=\"form-check-input\" value=\"CDB\" v-model=\"checkedInvestimentos\">\r\n            <label for=\"cdb\">CDB</label>\r\n          </div>\r\n          <div class=\"mb-3 form-check form-check-inline\">\r\n            <input type=\"checkbox\" name=\"lci\" id=\"lci\" class=\"form-check-input\" value=\"LCI\" v-model=\"checkedInvestimentos\">\r\n            <label for=\"lci\">LCI</label>\r\n          </div>\r\n          <div class=\"mb-3 form-check form-check-inline\">\r\n            <input type=\"checkbox\" name=\"lca\" id=\"lca\" class=\"form-check-input\" value=\"LCA\" v-model=\"checkedInvestimentos\">\r\n            <label for=\"lca\">LCA</label>\r\n          </div>\r\n          <div class=\"mb-3 form-check form-check-inline\">\r\n            <input type=\"checkbox\" name=\"tesouro_ipca\" id=\"tesouro-ipca\" value=\"Tesouro IPCA\" class=\"form-check-input\" v-model=\"checkedInvestimentos\">\r\n            <label for=\"tesouro-ipca\">Tesouro IPCA</label>\r\n          </div>\r\n          <div class=\"mb-3 form-check form-check-inline\">\r\n            <input type=\"checkbox\" name=\"tesouro_selic\" id=\"tesouro-selic\" class=\"form-check-input\" value=\"Tesouro Selic\" v-model=\"checkedInvestimentos\">\r\n            <label label for=\"tesouro-selic\">Tesouro Selic</label>\r\n          </div>\r\n           <br>\r\n          <div class=\"mb-3\">\r\n             <label for=\"tempo\" class=\"form-label\"><strong>Qual o tempo do investimento em meses?</strong></label><br>\r\n            <input type=\"number\" name=\"tempo\" id=\"tempo\" min=\"0\" max=\"60\" alt=\"Insira um inteiro entre 1 e 60\" v-model.number=\"tempoInvestimento\">\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"investimento-inicial\" class=\"form-label\"><strong>Qual o valor do investimento inicial?</strong></label><br>\r\n            <input type=\"number\" name=\"investimento-inicial\" id=\"investimento-inicial\" min=\"0\" v-model.number=\"investimentoInicial\">\r\n          </div>\r\n          <button class=\"btn btn-primary\"><span class=\"bi-check-circle\"></span> Simular Futuro</button>\r\n        </form>\r\n    </div>\r\n    <div v-else class=\"resultados\">\r\n      <div v-if=\"loaded\" class=\"resultados\" id=\"carregados\">\r\n        <nav>\r\n          <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n              <button class=\"nav-link\" :class=\"{'active': isActiveBarra}\" @click=\"showBarra\" id=\"pills-home-tab\" type=\"button\" role=\"tab\">Gráfico de barras</button>\r\n            </li>\r\n          <li class=\"nav-item\" role=\"presentation\">\r\n            <button class=\"nav-link\" :class=\"{'active': isActiveLinha}\" @click=\"showLinha\" id=\"pills-profile-tab\" type=\"button\" role=\"tab\">Gráfico de linhas</button>\r\n          </li>\r\n          <li class=\"nav-item\" role=\"presentation\">\r\n            <button class=\"nav-link\" :class=\"{'active': isActiveTabela}\" @click=\"showTabela\" id=\"pills-contact-tab\" type=\"button\" role=\"tab\">Tabela</button>\r\n          </li>\r\n          </ul>\r\n        </nav>\r\n        <div v-if=\"flagTabela\" class=\"tabela\">\r\n          <table class=\"table table-striped table-bordered\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Investimento</th>\r\n                    <th>Montante</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(value, key) in montante\" :key=\"key\">\r\n                    <td> {{ key }}</td>\r\n                    <td>{{ value }}</td>\r\n                </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div v-if=\"flagBarras\"  class=\"chart-container\">\r\n          <BarChart :chart-data=\"barChartData\"/>\r\n        </div>\r\n        <div v-if=\"flagLinha\" class=\"chart-container\">\r\n          <LineChart :chart-data=\"lineChartData\"/>\r\n        </div>\r\n        <div id=\"nova-simulacao\">\r\n            <button class=\"btn btn-primary\" @click=\"notSubmitted = !notSubmitted\">Nova Simulação</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n     \r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport DataService from \"../../services/DataService\"\r\nimport BarChart from \"./BarChart.vue\";\r\nimport LineChart from \"./LineChart.vue\";\r\n\r\nexport default {\r\n    name: \"FuturoComponent\",\r\n    components: {  BarChart, LineChart },\r\n    data() {\r\n        return {\r\n            checkedInvestimentos: [],\r\n            tempoInvestimento: \"\",\r\n            investimentoInicial: \"\",\r\n            montante:{},\r\n            barChartData: {\r\n                        labels: [],\r\n                        datasets: [\r\n                                    {\r\n                                      label: 'Montante',\r\n                                      backgroundColor: [],\r\n                                      data: []\r\n          }\r\n                        ]\r\n                        },\r\n\r\n           LineChartData: {\r\n                                labels: [],\r\n                                datasets: [\r\n                                            {\r\n                                            }\r\n                                          ]\r\n                              },\r\n           // chartOptions:\r\n\r\n            notSubmitted: true,\r\n            loaded: false,\r\n            flagTabela: false,\r\n            flagLinha: false,\r\n            flagBarras: true,\r\n            isActiveBarra: \"\",\r\n            isActiveLinha: \"\",\r\n            isActiveTabela: \"\"\r\n        };\r\n    },\r\n    methods: {\r\n        registerInvestimento: function () {\r\n           this.barChartData.datasets[0].data = []; // Resetando os dados do gráfico de barras\r\n           this.barChartData.datasets[0].backgroundColor = []; // Resetando os dados das cores do gráfico de barras\r\n\r\n          //  this.lineChartData.datasets[0].data = []; Resetando os dados do gráfico de linhas\r\n         //  this.lineChartData.datasets[0].backgroundColor = [];  Resetando os dados das cores do gráfico de linhas\r\n\r\n            let backgorundColorSet =\r\n            {\r\n                      CDB: 'yellow',\r\n                      LCI: 'red',\r\n                      LCA: 'green',\r\n                      TesouroIPCA: 'brown',\r\n                      TesouroSelic: 'blue'\r\n            }\r\n\r\n\r\n           //Salvando os dados da simulação em um objeto\r\n           let dados = {\r\n              tempoInvestimento: this.tempoInvestimento,\r\n              investimentoInicial: this.investimentoInicial,\r\n              checkedInvestimentos: this.checkedInvestimentos\r\n            };\r\n\r\n            //Enviando os dados da simulação para o backend, processando a resposta e colocando nos dados do gráfico\r\n            DataService.createFuturo(dados)\r\n            .then(response =>  {\r\n              this.barChartData.labels = this.checkedInvestimentos;\r\n              //this.chartData.datasets[0].label = this.checkedInvestimentos;\r\n\r\n\r\n              for(const key in response.data.Montantes){\r\n                this.montante[key] = response.data.Montantes[key];\r\n                  this.barChartData.datasets[0].data.push(response.data.Montantes[key]);\r\n                  this.barChartData.datasets[0].backgroundColor.push(backgorundColorSet[key]);\r\n               }\r\n\r\n\r\n              let dataset = [{label:'', borderColor:'',backgroundColor:\"\", data:[0]}];\r\n              \r\n               for(let i = 0; i < response.data.Evolucao.length; i++ ){\r\n                let j = 0;\r\n                if(i === 0){\r\n                  dataset.data.pop();\r\n                  dataset.data.push(response.data.Evolucao[i]);\r\n                }\r\n                else if(response.data.Evolucao[i] == this.investimentoInicial){\r\n                  dataset.label = this.checkedInvestimentos[j];\r\n                  dataset.borderColor = backgorundColorSet[this.checkedInvestimentos[j]];\r\n                  dataset.backgroundColor = backgorundColorSet[this.checkedInvestimentos[j]];\r\n                  this.LineChartData.datasets.push(dataset);\r\n                  dataset = [{label:'', borderColor:'',backgroundColor:\"\", data:[]}];\r\n                }\r\n                else\r\n                  dataset.data.push(response.data.Evolucao[i]);\r\n                this.LineChartData.labels.push(i);\r\n               }\r\n             // this.chartData.datasets[0].label = this.checkedInvestimentos;\r\n              this.clearForm();\r\n              this.showResultados();\r\n             })\r\n          .catch(error => {\r\n          console.log(error.message);\r\n         });\r\n        },\r\n\r\n        showResultados: function(){\r\n              this.showBarra();\r\n              this.notSubmitted = false;\r\n              this.loaded = true;\r\n        },\r\n    clearForm: function() {\r\n       this.checkedInvestimentos = [];\r\n        this.tempoInvestimento = \"\";\r\n        this.investimentoInicial = \"\";\r\n    },\r\n    showBarra: function(){\r\n      this.flagBarras = true;\r\n      this.flagLinha = false;\r\n      this.flagTabela = false;\r\n      this.isActiveBarra =\"active\";\r\n      this.isActiveLinha=\"\";\r\n      this.isActiveTabela=\"\";\r\n    },\r\n    showTabela: function(){\r\n      this.flagBarras = false;\r\n      this.flagLinha = false;\r\n      this.flagTabela = true;\r\n      this.isActiveBarra =\"\";\r\n      this.isActiveLinha=\"\";\r\n      this.isActiveTabela=\"active\";\r\n    },\r\n    showLinha: function(){\r\n      this.flagBarras = false;\r\n      this.flagLinha = true;\r\n      this.flagTabela = false;\r\n      this.isActiveBarra =\"\";\r\n      this.isActiveLinha=\"active\";\r\n      this.isActiveTabela=\"\";\r\n    }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Chrome, Safari, Edge, Opera */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n\r\n/* Firefox */\r\ninput[type=number] {\r\n  -moz-appearance: textfield;\r\n}\r\n\r\n.chart-container {\r\n  margin-top: 10px;\r\n  max-height: 380px;\r\n  max-width: 400px;\r\n  align-items: center;\r\n  display: flex;\r\n}\r\n\r\n#nova-simulacao{\r\n  margin-top: 10px;\r\n}\r\n\r\n#tempo{\r\n  width: 202.4px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}